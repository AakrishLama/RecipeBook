{"ast":null,"code":"var _jsxFileName = \"/Users/aakrishlama/Desktop/RecipeBook-main/frontend/src/component/Card.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(props) {\n  const crop = msg => {\n    // Check if msg is defined and is a string\n    if (typeof msg === 'string') {\n      // Handle \"uploads/\" path\n      if (msg.includes(\"../frontend/public/fotos/\")) {\n        return msg.replace(\"../frontend/public/fotos/\", \"./fotos/\");\n      }\n    } else {\n      console.warn('msg is not a valid string:', msg); // Log a warning if msg is not valid\n    }\n\n    // Return a default image path if msg is undefined or not a string\n    return '../pictures/example.png'; // Set a default image path\n  };\n\n  //Ensure props.Img is passed correctly, and use it for the crop function\n  const imagePath = crop(props.foodImg); // Use props.foodImg instead of props.Img\n  // console.log('Cropped image path:', imagePath); // Log the final image path}    \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mt-3 mx-3\",\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: imagePath,\n        alt: `${props.foodName} foto`,\n        style: {\n          height: \"120px\",\n          objectFit: \"fill\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title color-text-yellow\",\n          children: props.foodName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text description\",\n          rows: \"3\",\n          children: [props.foodIntro, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onClick,\n          className: \"btn btn-primary\",\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","props","crop","msg","includes","replace","console","warn","imagePath","foodImg","children","className","style","width","src","alt","foodName","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","rows","foodIntro","onClick","_c","$RefreshReg$"],"sources":["/Users/aakrishlama/Desktop/RecipeBook-main/frontend/src/component/Card.js"],"sourcesContent":["import React from 'react'\n\nexport default function Card(props) {\n  const crop = (msg) => {\n    // Check if msg is defined and is a string\n    if (typeof msg === 'string') {\n      // Handle \"uploads/\" path\n      if (msg.includes(\"../frontend/public/fotos/\")) {\n        return msg.replace(\"../frontend/public/fotos/\", \"./fotos/\");\n      }\n\n    } else {\n      console.warn('msg is not a valid string:', msg); // Log a warning if msg is not valid\n    }\n\n    // Return a default image path if msg is undefined or not a string\n    return '../pictures/example.png'; // Set a default image path\n  };\n\n  //Ensure props.Img is passed correctly, and use it for the crop function\n  const imagePath = crop(props.foodImg); // Use props.foodImg instead of props.Img\n  // console.log('Cropped image path:', imagePath); // Log the final image path}    \n  return (\n    <div>\n      <div className=\"card mt-3 mx-3\" style={{ width: \"18rem\" }}>\n        <img className=\"card-img-top\" src={imagePath} alt={`${props.foodName} foto`} style={{ height: \"120px\", objectFit: \"fill\" }} />\n        <div className=\"card-body\">\n          <h5 className=\"card-title color-text-yellow\">{props.foodName}</h5>\n          <p className=\"card-text description\" rows=\"3\" >{props.foodIntro} </p>\n          <button onClick={props.onClick} className=\"btn btn-primary\" >View Details</button> {/* Call the onClick prop */}\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAClC,MAAMC,IAAI,GAAIC,GAAG,IAAK;IACpB;IACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MAC3B;MACA,IAAIA,GAAG,CAACC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;QAC7C,OAAOD,GAAG,CAACE,OAAO,CAAC,2BAA2B,EAAE,UAAU,CAAC;MAC7D;IAEF,CAAC,MAAM;MACLC,OAAO,CAACC,IAAI,CAAC,4BAA4B,EAAEJ,GAAG,CAAC,CAAC,CAAC;IACnD;;IAEA;IACA,OAAO,yBAAyB,CAAC,CAAC;EACpC,CAAC;;EAED;EACA,MAAMK,SAAS,GAAGN,IAAI,CAACD,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC;EACvC;EACA,oBACEV,OAAA;IAAAW,QAAA,eACEX,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAH,QAAA,gBACxDX,OAAA;QAAKY,SAAS,EAAC,cAAc;QAACG,GAAG,EAAEN,SAAU;QAACO,GAAG,EAAE,GAAGd,KAAK,CAACe,QAAQ,OAAQ;QAACJ,KAAK,EAAE;UAAEK,MAAM,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9HvB,OAAA;QAAKY,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxBX,OAAA;UAAIY,SAAS,EAAC,8BAA8B;UAAAD,QAAA,EAAET,KAAK,CAACe;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClEvB,OAAA;UAAGY,SAAS,EAAC,uBAAuB;UAACY,IAAI,EAAC,GAAG;UAAAb,QAAA,GAAGT,KAAK,CAACuB,SAAS,EAAC,GAAC;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACrEvB,OAAA;UAAQ0B,OAAO,EAAExB,KAAK,CAACwB,OAAQ;UAACd,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAE;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACI,EAAA,GAhCuB1B,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}