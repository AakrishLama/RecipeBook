{"ast":null,"code":"var _jsxFileName = \"/Users/aakrishlama/Desktop/RecipeBook-main/frontend/src/screens/FoodContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodContext = /*#__PURE__*/createContext();\n\n// Custom hook to use FoodContext\nexport const useFood = () => {\n  _s();\n  return useContext(FoodContext);\n};\n\n// Provider component\n_s(useFood, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const FoodProvider = ({\n  children\n}) => {\n  _s2();\n  const [foodCat, setFoodCat] = useState([]);\n  const [foodItem, setFoodItem] = useState([]);\n  const loadData = async () => {\n    let response = await fetch(\"http://localhost:9000/api/getFood\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    response = await response.json();\n    // console.log(response[0], response[1])\n    setFoodCat(response[0]);\n    setFoodItem(response[1]);\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FoodContext.Provider, {\n    value: {\n      foodCat,\n      foodItem,\n      loadData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s2(FoodProvider, \"lByzzhVQdrSO9AyC8ulwwCfAg5k=\");\n_c = FoodProvider;\nvar _c;\n$RefreshReg$(_c, \"FoodProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","FoodContext","useFood","_s","FoodProvider","children","_s2","foodCat","setFoodCat","foodItem","setFoodItem","loadData","response","fetch","method","headers","json","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aakrishlama/Desktop/RecipeBook-main/frontend/src/screens/FoodContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst FoodContext = createContext();\n\n// Custom hook to use FoodContext\nexport const useFood = () => useContext(FoodContext);\n\n// Provider component\nexport const FoodProvider = ({ children }) => {\n    const [foodCat, setFoodCat] = useState([]);\n    const [foodItem, setFoodItem] = useState([]);\n\n    const loadData = async () => {\n        let response = await fetch(\"http://localhost:9000/api/getFood\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"multipart/form-data\" }\n        });\n        response = await response.json();\n        // console.log(response[0], response[1])\n        setFoodCat(response[0]);\n        setFoodItem(response[1]);\n    }\n\n    useEffect(() => {\n        loadData();\n    }, []);\n\n    return (\n        <FoodContext.Provider value={{ foodCat, foodItem, loadData }}>\n            {children}\n        </FoodContext.Provider>\n    );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACrD,CAAC,CAAC;IACFH,QAAQ,GAAG,MAAMA,QAAQ,CAACI,IAAI,CAAC,CAAC;IAChC;IACAR,UAAU,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;IACvBF,WAAW,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZc,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEX,OAAO;MAAEE,QAAQ;MAAEE;IAAS,CAAE;IAAAN,QAAA,EACxDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAChB,GAAA,CAxBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}